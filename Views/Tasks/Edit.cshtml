@model TaskManagementAPP.Models.ViewModels.EditTaskRequest
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Edit Task - Task Functionality</h1>
    </div>
</div>

<div class="container py-5"> 

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model != null)
    {
        <form method="post">

            <div class="mb-3">
                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Id, new { @class = "form-control", id = "id", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", id = "title" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", id = "description" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control", id = "duedate", type = "date" })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.AssignedTo, new { @class = "form-control", id = "assignedto", type = "email" })
                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
            </div>

            <div class="form-check mb-3">
                @Html.CheckBoxFor(model => model.IsCompleted, new { @class = "form-check-input", id = "iscompleted" })
                @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.IsCompleted, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-dark">Update</button>
            </div>
           
        </form>
       

    }
    else
    {
        <p>No Task Found!</p>
    }

</div>
